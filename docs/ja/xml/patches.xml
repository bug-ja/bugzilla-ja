<!-- <!DOCTYPE appendix PUBLIC "-//OASIS//DTD DocBook V4.1//EN"> -->
<appendix id="patches" xreflabel="Useful Patches and Utilities for Bugzilla">
  <title>寄贈</title>

  <para>
    <filename class="directory">$BUGZILLA_ROOT/contrib/</filename>
    ディレクトリにたくさんの非公式の Bugzilla アドオンがあります。
    この章ではこれらに関して解説します。
  </para>

  <section id="cmdline">
    <title>コマンドライン検索インターフェース</title>

    <para>
      コマンドラインから Bugzilla を検索可能な Unix ユーティリティです。
      これらは
      <filename class="directory">contrib/cmdline</filename> ディレクトリにあります。
      <filename>query.conf</filename>, <filename>buglist</filename> と 
      <filename>bugs</filename> の3ファイルで構成されています。
    </para>

    <warning>
      <para>
        これらのファイルはテンプレート化が行われる 2.16 リリースより前のもので、
        まだ更新されていません。
      </para>
    </warning>
    
    <para>
      <filename>query.conf</filename> はオプションをフィールド名や比較方法に
      対応付けるための情報です。引用付付きの名前は <quote>検索</quote> 用ですので、
      このファイルは簡単に編集できる必要があります。コメント (#) は無視されます。
      コメント行には引用付付きの <quote>オプション</quote>
      を含まないようにする必要があります。
    </para>

    <para>
      <filename>buglist</filename> は Bugzilla クエリを実行し、
      stdout に結果の HTML ページを返すシェルスクリプトです。
      短い形式のオプション (<quote>-Afoo</quote> や <quote>-Rbar</quote> など) 
      と長い形式のオプション (<quote>--assignedto=foo</quote> や 
      <quote>--reporter=bar</quote> など) の両方がサポートされています。
      オプションの先頭文字が <quote>-</quote> でない場合、
      <quote>--default=</quote> が先頭についているものと認識されます。
    </para>

    <para>
      カラムリストは COLUMNLIST 環境変数から取得されます。
      これは、buglist.cgi のバグリストで <quote>Change Columns</quote> 
      オプションにて利用可能なものと同じです。すでに Bugzilla を利用している場合は、
      あなたのクッキーを COLUMNLIST で検索して、現在の COLUMNLIST 
      設定を見ることも可能です。
    </para>

    <para>
      <filename>bugs</filename> は単純なシェルスクリプトで、<filename>buglist</filename>
      を実行し出力からバグ番号を切り出します。バグが見つかったとき、
      プレフィックス
      <quote>http://bugzilla.mozilla.org/buglist.cgi?bug_id=</quote>
      を追加するとバグリストに変換できます。
      バグの数を数えるのも簡単で、
      <command>sed -e 's/,/ /g' | wc | awk '{printf $2 "\n"}'</command>
      コマンドにパイプ経由で入力するだけです。
    </para>

    <para>
      Akkana Peck によると <filename>buglist</filename> の出力を
      <command>w3m -T text/html -dump</command>
      にパイプすると便利とのことです。
    </para>

  </section>

  <section id="cmdline-bugmail">
    <title>コマンドライン '未送信の Bug-mail を送信する' ツール</title>

    <para>
      <filename class="directory">contrib</filename> ディレクトリには、
      (短い) 説明的な名前 <filename>sendunsentbugmail.pl</filename>
      のスクリプトがあります。このスクリプトの目的は単純で、
      何らかの理由でまだ送信されていないバグ関係のメールを送信するものです。
    </para>

    <para>
      このタスクを理解するためには、<filename>sendunsentbugmail.pl</filename> が、
      <filename>sanitycheck.cgi</filename> スクリプトと同じ機構を利用していることを把握してください。
      これは、30 分以上前に変更が加えられたにもかかわらず、それに関連するメールが
      送信された記録がないバグを全データベースから検索します。
      リストを作成後、通常の誰にメールを送信するか判定するルールを適用し、
      メールを送信します。
    </para>

    <para>
      スクリプトが実行されると、
      As the script runs, it indicates the bug for which it is currently
      sending mail; when it has finished, it gives a numerical count of how
      many mails were sent and how many people were excluded. (Individual
      user names are not recorded or displayed.) If the script produces
      no output, that means no unsent mail was detected.
    </para>

    <para>
      <emphasis>Usage</emphasis>: move the sendunsentbugmail.pl script
      up into the main directory, ensure it has execute permission, and run it
      from the command line (or from a cron job) with no parameters.
    </para>
  </section>

</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-always-quote-attributes:t
sgml-auto-insert-required-elements:t
sgml-balanced-tag-edit:t
sgml-exposed-tags:nil
sgml-general-insert-case:lower
sgml-indent-data:t
sgml-indent-step:2
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
sgml-minimize-attributes:nil
sgml-namecase-general:t
sgml-omittag:t
sgml-parent-document:("Bugzilla-Guide.xml" "book" "chapter")
sgml-shorttag:t
sgml-tag-region-if-active:t
End:
-->

